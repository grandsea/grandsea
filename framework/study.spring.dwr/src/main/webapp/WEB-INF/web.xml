<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
    <display-name>study.spring.dwr</display-name>
    <session-config>
        <session-timeout>30</session-timeout>
    </session-config>

    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            classpath:applicationContext.xml
        </param-value>
    </context-param>
    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>WEB-INF/log4j.properties</param-value>
    </context-param>

    <listener>
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
    </listener>
    <listener>
        <listener-class>
        org.springframework.web.context.request.RequestContextListener</listener-class>
    </listener>
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <listener>
        <listener-class>
            org.directwebremoting.servlet.EfficientShutdownServletContextAttributeListener
        </listener-class>
    </listener>
    <listener>
        <listener-class>
            org.directwebremoting.servlet.EfficientShutdownServletContextListener
        </listener-class>
    </listener>


    <servlet>
        <servlet-name>spring</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>
                WEB-INF/spring-servlet.xml
                <!-- classpath:spring/webControllerContext.xml -->
            </param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet>
        <servlet-name>spring-json</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet>
        <servlet-name>dwr-invoker</servlet-name>
        <servlet-class>org.directwebremoting.spring.DwrSpringServlet</servlet-class>
        <!-- This should NEVER be present in live -->
        <init-param>
            <param-name>debug</param-name>
            <param-value>true</param-value>
        </init-param>
        <!-- Remove this unless you want to use active reverse ajax -->
        <init-param>
            <param-name>activeReverseAjaxEnabled</param-name>
            <param-value>true</param-value>
        </init-param>
        <!--
                        By default DWR creates application scope objects when they are first
                        used. This creates them when the app-server is started
                -->
        <init-param>
            <param-name>initApplicationScopeCreatorsAtStartup</param-name>
            <param-value>true</param-value>
        </init-param>
        <!--
                        WARNING: allowing JSON-RPC connections bypasses much of the security
                        protection that DWR gives you. Take this out if security is important
                -->
        <init-param>
            <param-name>jsonRpcEnabled</param-name>
            <param-value>true</param-value>
        </init-param>
        <!--
                        WARNING: allowing JSONP connections bypasses much of the security
                        protection that DWR gives you. Take this out if security is important
                -->
        <init-param>
            <param-name>jsonpEnabled</param-name>
            <param-value>true</param-value>
        </init-param>
        <!--
                        data: URLs are good for small images, but are slower, and could OOM
                        for larger images. Leave this out (or keep 'false') for anything but
                        small images
                -->
        <init-param>
            <param-name>preferDataUrlSchema</param-name>
            <param-value>false</param-value>
        </init-param>
        <!--
                        This enables full streaming mode. It's probably better to leave this
                        out if you are running across the Internet
                -->
        <init-param>
            <param-name>maxWaitAfterWrite</param-name>
            <param-value>-1</param-value>
        </init-param>
        <!--
                        For more information on these parameters, see: -
                        http://getahead.org/dwr/server/servlet -
                        http://getahead.org/dwr/reverse-ajax/configuration
                -->
        <load-on-startup>2</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>dwr-invoker</servlet-name>
        <url-pattern>/dwr/*</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>spring</servlet-name>
        <url-pattern>*.htm</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>spring-json</servlet-name>
        <url-pattern>*.json</url-pattern>
    </servlet-mapping>

    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>
</web-app>